services:
    zookeeper:
      image: confluentinc/cp-zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"
      networks:
        - tools

    kafka:
      image: confluentinc/cp-kafka
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT     
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      networks:
        - tools

    prometheus:
      image: prom/prometheus # Use specific versions
      container_name: prometheus
      ports:
        - "9090:9090" # Access Prometheus UI from host
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml 
        # Optional: Mount data volume for persistence
        # - prometheus_data:/prometheus 
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        # Optional: Set storage retention
        # - '--storage.tsdb.retention.time=30d' 
      networks:
        - tools
      # Optional: Restart policy
      # restart: unless-stopped

    grafana:
      image: grafana/grafana # Use specific versions
      container_name: grafana
      ports:
        - "3000:3000" # Access Grafana UI from host
      environment:
        # Default login: admin/admin (change PW after first login)
        # Optional: configure data source via env vars (more advanced)
        # GF_DATASOURCES_DEFAULT_NAME: Prometheus
        # GF_DATASOURCES_DEFAULT_TYPE: prometheus
        # GF_DATASOURCES_DEFAULT_URL: http://prometheus:9090
        # GF_DATASOURCES_DEFAULT_ACCESS: proxy 
        # GF_DATASOURCES_DEFAULT_IS_DEFAULT: "true"
        GF_AUTH_ANONYMOUS_ENABLED: "false" # Set to true for no-login access if desired
      volumes:
        # Optional: Mount data volume for dashboards/plugins persistence
        - grafana_data:/var/lib/grafana 
      networks:
        - tools
      depends_on:
        - prometheus

networks:
  tools:
    driver: bridge

volumes:
 grafana_data: {}